// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	category "ikuzports/features/category"

	mock "github.com/stretchr/testify/mock"
)

// CategoryRepo is an autogenerated mock type for the RepositoryInterface type
type CategoryRepo struct {
	mock.Mock
}

// GetAll provides a mock function with given fields:
func (_m *CategoryRepo) GetAll() ([]category.CategoryCore, error) {
	ret := _m.Called()

	var r0 []category.CategoryCore
	if rf, ok := ret.Get(0).(func() []category.CategoryCore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]category.CategoryCore)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCategoryRepo interface {
	mock.TestingT
	Cleanup(func())
}

// NewCategoryRepo creates a new instance of CategoryRepo. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCategoryRepo(t mockConstructorTestingTNewCategoryRepo) *CategoryRepo {
	mock := &CategoryRepo{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
